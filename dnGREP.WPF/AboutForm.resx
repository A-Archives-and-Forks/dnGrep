<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="logoPictureBox.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>