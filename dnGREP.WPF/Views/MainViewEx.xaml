<Window x:Class="dnGREP.WPF.MainFormEx"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:splitButton="clr-namespace:Wpf.Controls;assembly=Wpf.SplitButton"
    xmlns:my="clr-namespace:dnGREP.WPF"
    xmlns:Controls="clr-namespace:dnGREP.WPF.UserControls"
    Title="{Binding Path=WindowTitle}" MinHeight="460"     
    WindowState="Normal" 
    MinWidth="500" Icon="/dnGREP;component/nGREP.ico" Closing="MainForm_Closing"
    Loaded="Window_Loaded" Style="{StaticResource DefaultStyle}" 
    Background="{StaticResource GradientBackground}"
    SnapsToDevicePixels="True" ResizeMode="CanResizeWithGrip" AllowDrop="False"
    my:DiginesisHelpProvider.HelpKeyword="search-window.html" my:DiginesisHelpProvider.HelpNavigator="Topic" my:DiginesisHelpProvider.ShowHelp="True" 
    WindowStartupLocation="Manual" TextOptions.TextFormattingMode="{Binding Path=TextFormatting}"
    FocusManager.FocusedElement="{Binding ElementName=tbSearchFor}" Activated="Window_Activated" StateChanged="Window_StateChanged">
    <!-- Resources -->
    <Window.Resources>
        <my:InverseBooleanConverter x:Key="InverseBooleanConverter" />
        <my:TotalValueConverter x:Key="TotalValueConverter" />
        <my:EnumBooleanConverter x:Key="ebc" />
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

        <Style x:Key="ExpandedTextbox" TargetType="{x:Type TextBox}" BasedOn="{StaticResource DefaultStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="True">
                    <Setter Property="Height" Value="Auto"/>
                    <Setter Property="TextWrapping" Value="Wrap"/>
                    <Setter Property="AcceptsReturn" Value="True"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="False">
                    <Setter Property="Height" Value="25"/>
                    <Setter Property="TextWrapping" Value="NoWrap"/>
                    <Setter Property="AcceptsReturn" Value="False"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandedGridRow" TargetType="{x:Type RowDefinition}" BasedOn="{StaticResource DefaultStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="True">
                    <Setter Property="Height" Value="*"/>
                    <Setter Property="MinHeight" Value="178"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="False">
                    <Setter Property="Height" Value="Auto"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandedGridRowMain" TargetType="{x:Type RowDefinition}" BasedOn="{StaticResource DefaultStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="True">
                    <Setter Property="Height" Value="*"/>
                    <Setter Property="MinHeight" Value="300"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="False">
                    <Setter Property="Height" Value="Auto"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="ExpandedGrid" TargetType="{x:Type Grid}" BasedOn="{StaticResource DefaultStyle}">
            <Style.Triggers>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="True">
                    <Setter Property="Height" Value="Auto"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding Path=Multiline}" Value="False">
                    <Setter Property="Height" Value="25"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
       
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="Escape" Command="{Binding CloseCommand}"/>
    </Window.InputBindings>

    <Grid Name="gridMain" Margin="0,-1,0,1">
        <Grid.RowDefinitions>
            <RowDefinition Height="25" />
            <RowDefinition Height="*"/>
            <RowDefinition Height="25" />
        </Grid.RowDefinitions>
        <Grid Name="gridTop" Grid.Row="0" Background="{Binding ElementName=statusBar, Path=Background}">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="70" />
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <TextBlock Grid.Column="0" FontFamily="Microsoft Sans Serif" FontWeight="Bold" FontSize="16" Text="dnGREP"/>
            <Menu Background="{Binding ElementName=gridTop, Path=Background}" Name="mnuMainMenu" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource DefaultStyle}">
                <MenuItem Name="undoToolStripMenuItem" Header="_Undo" Command="{Binding Path=UndoCommand}"/>
                <MenuItem Header="_Options..." Command="{Binding Path=OptionsCommand}"/>
                <MenuItem Header="_About" Name="helpToolStripMenuItem">
                    <MenuItem Command="{Binding Path=HelpCommand}" Header="_Help"></MenuItem>
                    <MenuItem Command="{Binding Path=AboutCommand}" Header="_About..."></MenuItem>
                </MenuItem>
            </Menu>
        </Grid>
        <Grid Name="gridSearch" Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Style="{StaticResource ExpandedGridRowMain}"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid Name="gridSearchPane" Grid.Row="0">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Style="{StaticResource ExpandedGridRow}"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <GroupBox Header="Search in" Grid.Row="0">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="48" />
                        </Grid.ColumnDefinitions>
                        <Controls:FolderSelectDropdown Grid.Column="0"/>                        
                        <Button Command="{Binding Path=BrowseCommand}" Grid.Column="1" Width="42" HorizontalAlignment="Right" Name="btnBrowse" 
                            ToolTip="Browse for folder or files" TabIndex="4">...</Button>
                    </Grid>
                </GroupBox>
                <GroupBox Header="Search" Grid.Row="1">
                    <DockPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Height="Auto">
                        <Grid DockPanel.Dock="Top">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition  Width="60"/>
                            </Grid.ColumnDefinitions>
                            <StackPanel Orientation="Horizontal" Grid.Column="0">
                                <RadioButton GroupName="SearchRegex" Name="rbRegex" Margin="3" IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, ConverterParameter=Regex}" ToolTip="Regular expression search" TabIndex="11">Regex</RadioButton>
                                <RadioButton GroupName="SearchXPath" Name="rbXPath" Margin="3" IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, ConverterParameter=XPath}" ToolTip="XPath search (XML documents only)" TabIndex="12">XPath</RadioButton>
                                <RadioButton GroupName="SearchText" Name="rbText" Margin="3" IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, ConverterParameter=PlainText}" ToolTip="Plain text search" TabIndex="13">Text</RadioButton>
                                <RadioButton GroupName="SearchSoundex" Name="rbSoundex" Margin="3" IsChecked="{Binding Path=TypeOfSearch, Converter={StaticResource ebc}, ConverterParameter=Soundex}" ToolTip="Phonetic search" TabIndex="14">Phonetic</RadioButton>
                            </StackPanel>
                            <Label Grid.Column="1">
                                <Binding Path="ValidationMessage"/>
                            </Label>
                            <Button Grid.Column="2" Name="btnTest" Command="{Binding Path=TestCommand}" TabIndex="15">Test</Button>
                        </Grid>
                        <Expander DockPanel.Dock="Bottom" Name="expOptions" IsExpanded="{Binding Path=IsOptionsExpanded}">
                            <Expander.Header>
                                <WrapPanel>
                                    <TextBlock>Options</TextBlock>
                                    <TextBlock Margin="15,0,0,0" Text="{Binding Path=OptionsSummary}"/>
                                </WrapPanel>
                            </Expander.Header>
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <CheckBox Margin="3" Name="cbCaseSensitive" IsChecked="{Binding Path=CaseSensitive}" IsEnabled="{Binding Path=IsCaseSensitiveEnabled}" TabIndex="20">Case sensitive</CheckBox>
                                    <CheckBox Margin="3" Name="cbMultiline" IsChecked="{Binding Path=Multiline}" IsEnabled="{Binding Path=IsMultilineEnabled}" TabIndex="21">Multiline (slower)</CheckBox>
                                    <CheckBox Margin="3" Name="cbWholeWord" IsChecked="{Binding Path=WholeWord}" IsEnabled="{Binding Path=IsWholeWordEnabled}" TabIndex="22">Whole word</CheckBox>
                                    <CheckBox Margin="3" Name="cbSingleline" IsChecked="{Binding Path=Singleline}" IsEnabled="{Binding Path=IsSinglelineEnabled}" TabIndex="23">Match dot as newline</CheckBox>
                                </StackPanel>
                            </StackPanel>
                        </Expander>
                        <Grid>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="70"/>
                                <ColumnDefinition Width="*"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" VerticalAlignment="Center">Search for:</TextBlock>
                            <ComboBox Grid.Row="0" Grid.Column="1" Text="{Binding Path=SearchFor}" IsEditable="True" Name="cbSearchFastBookmark" ItemsSource="{Binding Path=FastSearchBookmarks}" Style="{DynamicResource ComboBoxStyle1}"
                                                  FontFamily="Consolas" FontSize="12" TabIndex="5" my:DiginesisHelpProvider.HelpKeyword="regular-expressions.html" my:DiginesisHelpProvider.HelpNavigator="Topic" my:DiginesisHelpProvider.ShowHelp="True">
                                <ComboBox.ToolTip>
                                    <TextBlock>
                                                <Run>. matches all characters</Run>
                                                <LineBreak/>
                                                <Run>\w matches alpha-numerics</Run>
                                                <LineBreak/>
                                                <Run>\d matches digits</Run>
                                                <LineBreak/>
                                                <Run>\s matches space</Run>
                                                <LineBreak/>
                                                <Run>* matches any number of characters</Run>
                                                <LineBreak/>
                                                <Run>{1,3} matches 1 to 3 characters</Run>
                                                <LineBreak/>
                                                <Run>For more Regex patterns hit F1</Run>
                                    </TextBlock>
                                </ComboBox.ToolTip>
                            </ComboBox>
                            <TextBlock Grid.Row="1" Grid.Column="0" VerticalAlignment="Center">Replace for:</TextBlock>
                            <ComboBox Grid.Row="1" Grid.Column="1" Text="{Binding Path=ReplaceWith}" IsEditable="True" Name="cbReplaceFastBookmark" ItemsSource="{Binding Path=FastSearchBookmarks}" Style="{DynamicResource ComboBoxStyle1}"
                                                  FontFamily="Consolas" FontSize="12" TabIndex="5">
                                <ComboBox.ToolTip>
                                    <TextBlock>
										            <Run><![CDATA[$& replaces entire regex]]></Run>
										            <LineBreak/>
										            <Run><![CDATA[$1, $2, $3, etc... inserts the text matched between capturing parentheses into the replacement text]]></Run>
										            <LineBreak/>
										            <Run><![CDATA[$$ inserts a single dollar sign into the replacement text]]></Run>
                                    </TextBlock>
                                </ComboBox.ToolTip>
                            </ComboBox>
                        </Grid>
                    </DockPanel>
                </GroupBox>
                <Grid Grid.Row="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="97" />
                        <ColumnDefinition Width="*" />
                    </Grid.ColumnDefinitions>
                    <splitButton:SplitButton x:Name="btnBookmark" Content="Bookmark"
						Grid.Row="0" Grid.Column="0"
						Width="83" 
						VerticalAlignment="Top" 
						HorizontalAlignment="Left"  
						Margin="3" Command="{Binding Path=BookmarkAddCommand}" TabIndex="54">
                        <MenuItem Header="Add" Style="{StaticResource DefaultStyle}" Command="{Binding Path=BookmarkAddCommand}"/>
                        <MenuItem Header="Open" Style="{StaticResource DefaultStyle}" Command="{Binding Path=BookmarkOpenCommand}"/>
                    </splitButton:SplitButton>
                    <StackPanel HorizontalAlignment="Right" Grid.Column="1" Orientation="Horizontal">
                        <CheckBox IsChecked="{Binding Path=PreviewFileContent}" VerticalAlignment="Center" Margin="0 0 5 0" Name="cbPreviewFile">Preview file</CheckBox>
                        <splitButton:SplitButton x:Name="btnSearch" Content="Search" Command="{Binding Path=SearchCommand}" 
						    Grid.Row="0" Grid.Column="0" Width="67" Margin="3" 
						    Mode="{Binding Path=SearchButtonMode}" IsDefault="True" TabIndex="50">
                            <MenuItem Name="searchInResultsToolStripMenuItem" Header="Search in results" 
                                Command="{Binding Path=SearchInResultsCommand}" Style="{StaticResource DefaultStyle}"/>
                        </splitButton:SplitButton>
                        <Button Width="64" Margin="3" Content="Replace" Name="btnReplace" Command="{Binding Path=ReplaceCommand}" TabIndex="51" />
                        <splitButton:SplitButton x:Name="btnOtherActions" Content=">>"
						    Grid.Row="0" Grid.Column="0"
						    Width="43" VerticalAlignment="Top"
						    HorizontalAlignment="Left"  Margin="3" Command="{Binding Path=OtherActionsCommand}" TabIndex="52">
                            <MenuItem Name="copyFilesToolStripMenuItem" Header="Copy files..." Style="{StaticResource DefaultStyle}" Command="{Binding Path=CopyFilesCommand}"/>
                            <MenuItem Name="moveFilesToolStripMenuItem" Header="Move files..." Style="{StaticResource DefaultStyle}" Command="{Binding Path=MoveFilesCommand}"/>
                            <MenuItem Name="deleteFilesToolStripMenuItem" Header="Delete files..." Style="{StaticResource DefaultStyle}" Command="{Binding Path=DeleteFilesCommand}"/>
                            <Separator/>
                            <MenuItem Name="copyToClipboardToolStripMenuItem" Header="File names to clipboard" Style="{StaticResource DefaultStyle}" Command="{Binding Path=CopyToClipboardCommand}"/>
                            <MenuItem Name="saveAsCSVToolStripMenuItem" Header="Save as CSV..." Style="{StaticResource DefaultStyle}" Command="{Binding Path=SaveAsCsvCommand}"/>
                        </splitButton:SplitButton>
                        <Button Width="64" Margin="3" Content="Cancel" Name="btnCancel" Command="{Binding Path=CancelCommand}" TabIndex="53" />
                    </StackPanel>
                </Grid>
            </Grid>
            <ListView Grid.Row="2" ItemsSource="{Binding Path=SearchResults}" SelectionChanged="FilesSelectionChanged">
                <ListView.Resources>
                </ListView.Resources>
                <ListView.View>
                    <GridView>
                        <GridViewColumn Width="100" Header="Name">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <StackPanel Orientation="Horizontal">
                                        <Image Source="{Binding Icon}"/>
                                        <TextBlock Text="{Binding FileName}" Margin="3,0,0,0"/>
                                    </StackPanel>
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn Width="Auto" Header="Size" DisplayMemberBinding="{Binding Size}"/>
                        <GridViewColumn Width="Auto" Header="Matches" DisplayMemberBinding="{Binding Matches}"/>
                        <GridViewColumn Width="300" Header="Path" DisplayMemberBinding="{Binding FilePath}"/>
                    </GridView>
                </ListView.View>
            </ListView>
            <GridSplitter VerticalAlignment="Top" Grid.Row="3" ResizeDirection="Rows" Height="5" 
                  HorizontalAlignment="Stretch" ResizeBehavior="PreviousAndNext"
                  IsEnabled="{Binding Path=Multiline}" Visibility="{Binding Path=Multiline, 
                    Converter={StaticResource BooleanToVisibilityConverter}}"/>
            <ScrollViewer Grid.Row="4" VerticalScrollBarVisibility="Auto">
                <ItemsControl ItemsSource="{Binding Path=CodeSnippets}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <my:SyntaxHighlighter DataContext="{Binding Path=PreviewViewModel}" Margin="0, 10, 5, 0"/>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <VirtualizingStackPanel Orientation="Vertical" IsItemsHost="True" />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
            </ScrollViewer>
            <!--<TreeView Name="tvSearchResult" Grid.Row="4" ItemsSource="{Binding Path=SearchResults}" VirtualizingStackPanel.IsVirtualizing="True"
                      MouseDoubleClick="tvSearchResult_MouseDoubleClick" PreviewKeyDown="treeKeyDown" SelectedItemChanged="tvSearchResults_SelectedChanged">
                    <TreeView.ContextMenu>
                        <ContextMenu Opened="tvContexMenuOpening">
                            <MenuItem Header="Open" Click="btnOpenFile_Click"/>
                            <MenuItem Header="Open containing folder" Click="btnOpenContainingFolder_Click"/>
                            <MenuItem Header="Show file properties" Click="btnShowFileProperties_Click"/>
                            <MenuItem Name="btnCopyFileNameClipboard" Header="File name to clipboard" Click="btnCopyNameToClipboard_Click"/>
                            <MenuItem Name="btnCopyTreeItemClipboard" Header="Full file path to clipboard" Click="btnCopyTreeItemToClipboard_Click"/>
                            <Separator/>
                            <MenuItem Header="Exclude from results" Click="btnExclude_Click"/>
                            <MenuItem Header="Expand all" Click="btnExpandAll_Click"/>
                            <MenuItem Header="Collapse all" Click="btnCollapseAll_Click"/>
                        </ContextMenu>
                    </TreeView.ContextMenu>
                    <TreeView.Resources>
                        <LinearGradientBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFD9F4FF" Offset="0"/>
                            <GradientStop Color="#FF9BDDFB" Offset="1"/>
                        </LinearGradientBrush>
                        <LinearGradientBrush x:Key="{x:Static SystemColors.ControlBrushKey}" EndPoint="0,1" StartPoint="0,0">
                            <GradientStop Color="#FFEEEDED" Offset="0"/>
                            <GradientStop Color="#FFDDDDDD" Offset="1"/>
                        </LinearGradientBrush>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}" Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.ControlTextBrushKey}" Color="Black" />
                        <HierarchicalDataTemplate DataType="{x:Type my:FormattedGrepResult}" ItemsSource="{Binding Path=FormattedLines}" >
                            <VirtualizingStackPanel Orientation="Horizontal">
                                <Image Source="{Binding Icon}"/>
                                <TextBlock Text="{Binding Label}" Margin="3,0,0,0"/>
                            </VirtualizingStackPanel>
                        </HierarchicalDataTemplate>
                        <DataTemplate DataType="{x:Type my:FormattedGrepLine}">
                            <WrapPanel>
                                <WrapPanel.Resources>
                                    <Style TargetType="TextBlock">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="True">
                                                <Setter Property="Background" Value="#FFD2D2D2"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding RelativeSource={RelativeSource AncestorType={x:Type TreeViewItem}}, Path=IsSelected}" Value="False">
                                                <Setter Property="Background" Value="#FFE0E0E0"/>
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Path=Style}" Value="Empty">
                                                <Setter Property="Background" Value="White"/>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </WrapPanel.Resources>
                                <my:SyntaxHighlighter DataContext="{Binding Path=PreviewViewModel}"/>
                            </WrapPanel>
                        </DataTemplate>
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="TreeViewItem">
                            <EventSetter
                        Event="TreeViewItem.MouseRightButtonDown"
                        Handler="tvSearchResult_MouseDown"/>
                            <EventSetter
                        Event="TreeViewItem.PreviewMouseLeftButtonDown"
                        Handler="tvSearchResult_PreviewMouseLeftButtonDown"/>
                            <EventSetter
                        Event="TreeViewItem.PreviewMouseMove"
                        Handler="tvSearchResult_PreviewMouseMove"/>
                            <Setter Property="IsExpanded" Value="{Binding Path=IsExpanded, Mode=TwoWay}"/>
                            <Setter Property="FontSize" Value="12"/>
                            <Setter Property="BorderThickness" Value="1.5"/>
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Path=Style}" Value="Context">
                                    <Setter Property="Foreground" Value="DarkGray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Style}" Value="ReadOnly">
                                    <Setter Property="Foreground" Value="DarkGray"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Path=Style}" Value="Error">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="BorderBrush" Value="#adc6e5"/>
                                </Trigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsSelected" Value="True"/>
                                        <Condition Property="IsSelectionActive" Value="False"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="BorderBrush" Value="LightGray"/>
                                </MultiTrigger>
                            </Style.Triggers>
                        </Style>
                    </TreeView.ItemContainerStyle>
                </TreeView>-->
        </Grid>
        <StatusBar ClipToBounds="False" Grid.Row="2" Name="statusBar">
            <ProgressBar Name="barProgressBar" Height="18" IsIndeterminate="{Binding Path=IsOperationInProgress}" Width="150" />
            <TextBlock Name="lblStatus" Text="{Binding Path=StatusMessage}" />
        </StatusBar>
    </Grid>
</Window>
